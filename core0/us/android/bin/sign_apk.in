#!/bin/bash
#===-                           P L E B B L E
#===-                         https://plebble.us
#===-
#===-              Copyright (C) 2017-2022 root1m3@plebble.us
#===-
#===-                      GNU GENERAL PUBLIC LICENSE
#===-                       Version 3, 29 June 2007
#===-
#===-    This program is free software: you can redistribute it and/or modify
#===-    it under the terms of the GPLv3 License as published by the Free
#===-    Software Foundation.
#===-
#===-    This program is distributed in the hope that it will be useful,
#===-    but WITHOUT ANY WARRANTY; without even the implied warranty of
#===-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#===-
#===-    You should have received a copy of the General Public License
#===-    along with this program, see LICENCE file.
#===-    see https://www.gnu.org/licenses
#===-
#===----------------------------------------------------------------------------
#===-

us="##str3##"

inst=0
if [ "_$1" == "_--install" ]; then
  inst=1
fi

if [[ ! -f /var/$us/ush_config ]]; then
    echo "KO 87036 /var/$us/ush_config must exist with envvar keyroot"
fi
. /var/$us/ush_config

jarsigner="jarsigner"
keytool="keytool"
if [ "_$JAVA_HOME" != "_" ]; then
    jarsigner=$JAVA_HOME/bin/jarsigner
    keytool=$JAVA_HOME/bin/keytool
fi

function sign_apks {
    echo "signing APKs"
    ks=$1
    for file in `find . -name "*-unsigned.apk"`; do
        echo "found unsigned apk: $file"
        newfile=`echo $file | sed "s/-unsigned//"`
        echo "using $pass"
#        $jarsigner -verbose -keystore $ks $file distr <<< "$pass"
        $jarsigner -keystore $ks $file distr <<< "$pass"
        if [ $? -ne 0 ]; then
            echo "signer failed" >2
            exit 1
        fi
        mv $file $newfile
        echo "signature $newfile"
        echo "$file -> $newfile"
        $keytool -list -printcert -jarfile $newfile
    done
}

gpgkey=`cat $keyroot/distr_signing_key`
gpg_passphrase_file="$keyroot/.gnupg/passphrase"
gpg="gpg --homedir $keyroot/.gnupg"
pass=`cat $gpg_passphrase_file`

sign_apks $keyroot/keystore.jks

echo "in "`pwd`
find . -type f -name "*.apk"
if [ $inst -eq 1 ]; then
	echo "waiting for device"
	adb wait-for-device
	echo "installing"
	adb install `find . -type f -name "*.apk"`
#	reset
#	adb logcat | grep System.out

fi
exit 0


