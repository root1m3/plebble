====================================
##str3##-wallet
User Manual
====================================

KEYS
====

What is a key?

A key is a secret key. It is a 32 byte random number generated by you (your trusted program running in your trusted hardware).
They are supposed to be kept secret.
You can have as many secrets as you want, associate each one with a private key.

Generate a new secret.

the function "wallet gen_keys" generates an output similar to:
priv EHfRfgwHpY4JZU8WkWrDgxDQQhDRaPLed4ELHKoe9E4j
pub nRFwnSQnSPRtgKXvCw6E5DE2SoVyETm9b2pXaTcQHdQt
addr 4ETjMrUPAEPAAPJDduhaMnBLq1xV

the value priv is your secret-key, a base-58 encoding of a random 32-byte number.
the value pub is your public-key, a shareable string that you can safely share for public identification. Its the base58 encoding if a point in the elliptic curve secp256k1.
the value addr is a one-way transformation of pub your public-key, a shareable string that you can safely share for public identification. The hashing algorithm is RIPEMD160 producing a 20-byte-length number called address.

the function "wallet gen_keys" works only on-screen. The key generated is not stored in the wallet. It can be called repeatedly without altering the wallet state. Useful for e.g. creating strong passwords for websites.
the function "wallet add" can be used to store a private key in the wallet keyring. (file /home/gov/.##str3##/wallet/keys).
the function "wallet new" would create a key and store in the keyring.
the function "wallet list" lists the content of the keyring.
the function "priv_key" will show info about the given private key (address and public key).
the function "pub_key" will show info about the given public key (address).
the function "mine_public_key" can be used to find a private key that would produce an address starting with a given pattern (vanity addresses). The longer your pattern the longer it takes to mine it.



